// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	Config
	USER_CONFIG
	DB_CONFIG
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	DB   *DB_CONFIG   `protobuf:"bytes,1,opt,name=DB,json=dB" json:"DB,omitempty"`
	USER *USER_CONFIG `protobuf:"bytes,2,opt,name=USER,json=uSER" json:"USER,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetDB() *DB_CONFIG {
	if m != nil {
		return m.DB
	}
	return nil
}

func (m *Config) GetUSER() *USER_CONFIG {
	if m != nil {
		return m.USER
	}
	return nil
}

type USER_CONFIG struct {
	Name      string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=Address,json=address" json:"Address,omitempty"`
	Address2  string `protobuf:"bytes,3,opt,name=Address2,json=address2" json:"Address2,omitempty"`
	Last_Seen int64  `protobuf:"varint,4,opt,name=Last_Seen,json=lastSeen" json:"Last_Seen,omitempty"`
}

func (m *USER_CONFIG) Reset()                    { *m = USER_CONFIG{} }
func (m *USER_CONFIG) String() string            { return proto.CompactTextString(m) }
func (*USER_CONFIG) ProtoMessage()               {}
func (*USER_CONFIG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *USER_CONFIG) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *USER_CONFIG) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *USER_CONFIG) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

func (m *USER_CONFIG) GetLast_Seen() int64 {
	if m != nil {
		return m.Last_Seen
	}
	return 0
}

type DB_CONFIG struct {
	Type     string `protobuf:"bytes,1,opt,name=Type,json=type" json:"Type,omitempty"`
	User     string `protobuf:"bytes,2,opt,name=User,json=user" json:"User,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=Password,json=password" json:"Password,omitempty"`
	DBName   string `protobuf:"bytes,4,opt,name=DBName,json=dBName" json:"DBName,omitempty"`
}

func (m *DB_CONFIG) Reset()                    { *m = DB_CONFIG{} }
func (m *DB_CONFIG) String() string            { return proto.CompactTextString(m) }
func (*DB_CONFIG) ProtoMessage()               {}
func (*DB_CONFIG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DB_CONFIG) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DB_CONFIG) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DB_CONFIG) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *DB_CONFIG) GetDBName() string {
	if m != nil {
		return m.DBName
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "config.Config")
	proto.RegisterType((*USER_CONFIG)(nil), "config.USER_CONFIG")
	proto.RegisterType((*DB_CONFIG)(nil), "config.DB_CONFIG")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0x17, 0xb2, 0xf6, 0xcd, 0x8b, 0x4f, 0x90, 0xa0, 0x97, 0xd9, 0x8b, 0x3b, 0xed,
	0x50, 0x3f, 0x81, 0x5d, 0xa7, 0x08, 0x32, 0x25, 0xdd, 0xce, 0x23, 0x9a, 0x38, 0x04, 0xd7, 0x96,
	0x24, 0x43, 0xf6, 0xed, 0x25, 0x6f, 0xe9, 0xf0, 0x96, 0xdf, 0xfb, 0xff, 0x79, 0xbf, 0x47, 0xe0,
	0xe2, 0xb3, 0x6b, 0xbf, 0xbe, 0x77, 0xf3, 0xde, 0x76, 0xbe, 0x43, 0x7e, 0xa2, 0x62, 0x0d, 0x7c,
	0x41, 0x2f, 0xbc, 0x83, 0xb4, 0xae, 0x44, 0x32, 0x4d, 0x66, 0x93, 0xf2, 0x72, 0x1e, 0xcb, 0x75,
	0xb5, 0x5d, 0xbc, 0xad, 0x9e, 0x5e, 0x9e, 0x65, 0xaa, 0x2b, 0xbc, 0x07, 0xb6, 0x69, 0x96, 0x52,
	0xa4, 0x54, 0xba, 0x1a, 0x4a, 0x61, 0x36, 0xd4, 0xd8, 0xa1, 0x59, 0xca, 0xc2, 0xc3, 0xe4, 0xdf,
	0x10, 0x11, 0xd8, 0x4a, 0xed, 0x0d, 0x2d, 0xcf, 0x25, 0x6b, 0xd5, 0xde, 0xa0, 0x80, 0xf1, 0xa3,
	0xd6, 0xd6, 0x38, 0x47, 0xeb, 0x72, 0x39, 0x56, 0x27, 0xc4, 0x1b, 0xc8, 0x62, 0x52, 0x8a, 0x11,
	0x45, 0x59, 0x8c, 0x4a, 0xbc, 0x85, 0xfc, 0x55, 0x39, 0xbf, 0x6d, 0x8c, 0x69, 0x05, 0x9b, 0x26,
	0xb3, 0x91, 0xcc, 0x7e, 0x94, 0xf3, 0x81, 0x8b, 0x1d, 0xe4, 0xe7, 0x7b, 0x83, 0x73, 0x7d, 0xec,
	0xcf, 0x4e, 0x7f, 0xec, 0x4d, 0x98, 0x6d, 0x9c, 0xb1, 0x51, 0xc8, 0x0e, 0xce, 0xd8, 0x60, 0x7b,
	0x57, 0xce, 0xfd, 0x76, 0x56, 0x0f, 0xb6, 0x3e, 0x32, 0x5e, 0x03, 0xaf, 0x2b, 0xba, 0x9c, 0x51,
	0xc2, 0x35, 0xd1, 0x07, 0xa7, 0x3f, 0x7c, 0xf8, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xee, 0xdd, 0x58,
	0xe5, 0x53, 0x01, 0x00, 0x00,
}
